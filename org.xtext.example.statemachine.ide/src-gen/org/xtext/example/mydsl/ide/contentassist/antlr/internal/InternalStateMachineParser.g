/*
 * generated by Xtext 2.21.0
 */
parser grammar InternalStateMachineParser;

options {
	tokenVocab=InternalStateMachineLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.StateMachineGrammarAccess;

}
@members {
	private StateMachineGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("To", "'to'");
		tokenNameToValue.put("Reset", "'Reset'");
		tokenNameToValue.put("State", "'State'");
		tokenNameToValue.put("Block", "'block'");
		tokenNameToValue.put("Events", "'Events'");
		tokenNameToValue.put("Action", "'action'");
		tokenNameToValue.put("Actions", "'Actions'");
	}

	public void setGrammarAccess(StateMachineGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleStateMachine
entryRuleStateMachine
:
{ before(grammarAccess.getStateMachineRule()); }
	 ruleStateMachine
{ after(grammarAccess.getStateMachineRule()); } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateMachineAccess().getGroup()); }
		(rule__StateMachine__Group__0)
		{ after(grammarAccess.getStateMachineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getNameAssignment()); }
		(rule__Instruction__NameAssignment)
		{ after(grammarAccess.getInstructionAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getNameAssignment()); }
		(rule__Event__NameAssignment)
		{ after(grammarAccess.getEventAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getGroup()); }
		(rule__State__Group__0)
		{ after(grammarAccess.getStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMove
entryRuleMove
:
{ before(grammarAccess.getMoveRule()); }
	 ruleMove
{ after(grammarAccess.getMoveRule()); } 
	 EOF 
;

// Rule Move
ruleMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveAccess().getGroup()); }
		(rule__Move__Group__0)
		{ after(grammarAccess.getMoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group__0__Impl
	rule__StateMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getStateMachineAction_0()); }
	()
	{ after(grammarAccess.getStateMachineAccess().getStateMachineAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group__1__Impl
	rule__StateMachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getGroup_1()); }
	(rule__StateMachine__Group_1__0)
	{ after(grammarAccess.getStateMachineAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group__2__Impl
	rule__StateMachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getGroup_2()); }
	(rule__StateMachine__Group_2__0)
	{ after(grammarAccess.getStateMachineAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group__3__Impl
	rule__StateMachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getGroup_3()); }
	(rule__StateMachine__Group_3__0)
	{ after(grammarAccess.getStateMachineAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getStateAssignment_4()); }
	(rule__StateMachine__StateAssignment_4)*
	{ after(grammarAccess.getStateMachineAccess().getStateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_1__0__Impl
	rule__StateMachine__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getEventsKeyword_1_0()); }
	Events
	{ after(grammarAccess.getStateMachineAccess().getEventsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_1__1__Impl
	rule__StateMachine__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getBlockKeyword_1_1()); }
	Block
	{ after(grammarAccess.getStateMachineAccess().getBlockKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_1__2__Impl
	rule__StateMachine__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getBEGINTerminalRuleCall_1_2()); }
	RULE_BEGIN
	{ after(grammarAccess.getStateMachineAccess().getBEGINTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_1__3__Impl
	rule__StateMachine__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getStateMachineAccess().getEventAssignment_1_3()); }
		(rule__StateMachine__EventAssignment_1_3)
		{ after(grammarAccess.getStateMachineAccess().getEventAssignment_1_3()); }
	)
	(
		{ before(grammarAccess.getStateMachineAccess().getEventAssignment_1_3()); }
		(rule__StateMachine__EventAssignment_1_3)*
		{ after(grammarAccess.getStateMachineAccess().getEventAssignment_1_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getENDTerminalRuleCall_1_4()); }
	RULE_END
	{ after(grammarAccess.getStateMachineAccess().getENDTerminalRuleCall_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_2__0__Impl
	rule__StateMachine__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getResetKeyword_2_0()); }
	Reset
	{ after(grammarAccess.getStateMachineAccess().getResetKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_2__1__Impl
	rule__StateMachine__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getBlockKeyword_2_1()); }
	Block
	{ after(grammarAccess.getStateMachineAccess().getBlockKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_2__2__Impl
	rule__StateMachine__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getBEGINTerminalRuleCall_2_2()); }
	RULE_BEGIN
	{ after(grammarAccess.getStateMachineAccess().getBEGINTerminalRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_2__3__Impl
	rule__StateMachine__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getEventResetAssignment_2_3()); }
	(rule__StateMachine__EventResetAssignment_2_3)*
	{ after(grammarAccess.getStateMachineAccess().getEventResetAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getENDTerminalRuleCall_2_4()); }
	RULE_END
	{ after(grammarAccess.getStateMachineAccess().getENDTerminalRuleCall_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_3__0__Impl
	rule__StateMachine__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getActionsKeyword_3_0()); }
	Actions
	{ after(grammarAccess.getStateMachineAccess().getActionsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_3__1__Impl
	rule__StateMachine__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getBlockKeyword_3_1()); }
	Block
	{ after(grammarAccess.getStateMachineAccess().getBlockKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_3__2__Impl
	rule__StateMachine__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getBEGINTerminalRuleCall_3_2()); }
	RULE_BEGIN
	{ after(grammarAccess.getStateMachineAccess().getBEGINTerminalRuleCall_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_3__3__Impl
	rule__StateMachine__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getInstructionsAssignment_3_3()); }
	(rule__StateMachine__InstructionsAssignment_3_3)*
	{ after(grammarAccess.getStateMachineAccess().getInstructionsAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateMachine__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateMachineAccess().getENDTerminalRuleCall_3_4()); }
	RULE_END
	{ after(grammarAccess.getStateMachineAccess().getENDTerminalRuleCall_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getStateKeyword_0()); }
	State
	{ after(grammarAccess.getStateAccess().getStateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
	(rule__State__NameAssignment_1)
	{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getBlockKeyword_2()); }
	Block
	{ after(grammarAccess.getStateAccess().getBlockKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getStateAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getGroup_4()); }
	(rule__State__Group_4__0)?
	{ after(grammarAccess.getStateAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__5__Impl
	rule__State__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getMovesAssignment_5()); }
	(rule__State__MovesAssignment_5)*
	{ after(grammarAccess.getStateAccess().getMovesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getStateAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_4__0__Impl
	rule__State__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getActionKeyword_4_0()); }
	Action
	{ after(grammarAccess.getStateAccess().getActionKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getStateAccess().getActionsAssignment_4_1()); }
		(rule__State__ActionsAssignment_4_1)
		{ after(grammarAccess.getStateAccess().getActionsAssignment_4_1()); }
	)
	(
		{ before(grammarAccess.getStateAccess().getActionsAssignment_4_1()); }
		(rule__State__ActionsAssignment_4_1)*
		{ after(grammarAccess.getStateAccess().getActionsAssignment_4_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Move__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__0__Impl
	rule__Move__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getEventAssignment_0()); }
	(rule__Move__EventAssignment_0)
	{ after(grammarAccess.getMoveAccess().getEventAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__1__Impl
	rule__Move__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getToKeyword_1()); }
	To
	{ after(grammarAccess.getMoveAccess().getToKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getStateAssignment_2()); }
	(rule__Move__StateAssignment_2)
	{ after(grammarAccess.getMoveAccess().getStateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__EventAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateMachineAccess().getEventEventParserRuleCall_1_3_0()); }
		ruleEvent
		{ after(grammarAccess.getStateMachineAccess().getEventEventParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__EventResetAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateMachineAccess().getEventResetEventCrossReference_2_3_0()); }
		(
			{ before(grammarAccess.getStateMachineAccess().getEventResetEventIDTerminalRuleCall_2_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStateMachineAccess().getEventResetEventIDTerminalRuleCall_2_3_0_1()); }
		)
		{ after(grammarAccess.getStateMachineAccess().getEventResetEventCrossReference_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__InstructionsAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateMachineAccess().getInstructionsInstructionParserRuleCall_3_3_0()); }
		ruleInstruction
		{ after(grammarAccess.getStateMachineAccess().getInstructionsInstructionParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__StateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateMachineAccess().getStateStateParserRuleCall_4_0()); }
		ruleState
		{ after(grammarAccess.getStateMachineAccess().getStateStateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getInstructionAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__ActionsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getActionsInstructionCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getStateAccess().getActionsInstructionIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStateAccess().getActionsInstructionIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getStateAccess().getActionsInstructionCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__MovesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getMovesMoveParserRuleCall_5_0()); }
		ruleMove
		{ after(grammarAccess.getStateAccess().getMovesMoveParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__EventAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getEventEventCrossReference_0_0()); }
		(
			{ before(grammarAccess.getMoveAccess().getEventEventIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMoveAccess().getEventEventIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getMoveAccess().getEventEventCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__StateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getStateStateCrossReference_2_0()); }
		(
			{ before(grammarAccess.getMoveAccess().getStateStateIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMoveAccess().getStateStateIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getMoveAccess().getStateStateCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
