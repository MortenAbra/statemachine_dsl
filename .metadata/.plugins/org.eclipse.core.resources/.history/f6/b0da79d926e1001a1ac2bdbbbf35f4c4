package syntaxHighlighting

import org.eclipse.xtext.ui.editor.syntaxcoloring.DefaultSemanticHighlightingCalculator
import org.xtext.example.mydsl.stateMachine.State
import org.xtext.example.mydsl.stateMachine.StateMachinePackage
import org.eclipse.xtext.EcoreUtil2
import org.eclipse.xtext.nodemodel.INode
import org.eclipse.xtext.nodemodel.util.NodeModelUtils

class StateMachineSemanticHighligther extends DefaultSemanticHighlightingCalculator {
	
	override doProvideHighlightingFor(XtextResource resource, IHighlightedPositionAcceptor acceptor) {
	  
	  	//
		var rootObject = resource.getParseResult().getRootASTElement();
		  
		for (State ext : EcoreUtil2.getAllContentsOfType(rootObject, State)){  
			for (INode node : NodeModelUtils.findNodesForFeature(ext, StateMachinePackage.Literals.STATE__NAME)){
				acceptor.addPosition(node.getOffset(), node.getLength(), StateMachineHighlighting.STATE_NAME)
			} 
		}    
		  
		
		super.doProvideHighlightingFor(resource, acceptor);
	}
	
}