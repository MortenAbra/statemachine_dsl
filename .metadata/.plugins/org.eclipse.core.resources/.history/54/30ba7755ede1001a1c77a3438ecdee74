grammar org.xtext.example.mydsl.StateMachine with org.eclipse.xtext.common.Terminals
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate stateMachine "http://www.xtext.org/example/mydsl/StateMachine"

StateMachine:
	"Events" "block" BEGIN
		(event += Event)+ 
		END
	
	"Reset" "block" BEGIN 
		(eventReset += [Event])* 
		END
	
	"Actions" "block" BEGIN 
		(instructions += Instruction)* 
		END
	state += State*
;

Instruction:
	name=ID;

Event:
	name=ID;

State:
	"State" name=ID "block" BEGIN
	 ("action" (actions += [Instruction])+ "=>")?
	(moves+=Move)* 
	END
;

Move:
	"event" event=Trigger "to" state=[State] "state";

Trigger:
	event=[Event] | Expression;

Expression:
	Equality;


Equality returns Expression:
	Comparison ({Equal.left=current} '==' right=Comparison | {Unequal.left = current} '!=' right=Comparison)*;

Comparison returns Expression:
	SubAdd ({LessThan.left=current} '<' right=SubAdd | {LessThanEqual.left=current} '<=' right=SubAdd | {GreaterThan.left=current} '>' right=SubAdd | {GreaterThanEqual.left=current} '>=' right=SubAdd)*;

SubAdd returns Expression:
	MulDiv ({Plus.left=current} '+' right=MulDiv | {Minus.left=current} '-' right=MulDiv)*;

MulDiv returns Expression:
	Primary ({Mul.left=current} '*' right=Primary | {Div.left=current} '/' right=Primary)*;
	
Primary returns Expression:
	"(" Expression ")" | Number 
;

Number:
	value=INT
;

    
terminal BEGIN:
	'synthetic:BEGIN'
;

terminal END:
	'synthetic:END'
;

@Override 
terminal INT returns ecore::EInt:
	'0' | ('1'..'9')('0'..'9')*;
	
terminal DBL returns ecore::EDouble:
	INT? '.'('0'..'9')+; 